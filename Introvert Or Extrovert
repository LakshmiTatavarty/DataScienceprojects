{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91718,"databundleVersionId":12738969,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:21.259734Z","iopub.execute_input":"2025-07-31T18:18:21.260052Z","iopub.status.idle":"2025-07-31T18:18:21.267534Z","shell.execute_reply.started":"2025-07-31T18:18:21.260025Z","shell.execute_reply":"2025-07-31T18:18:21.266601Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s5e7/sample_submission.csv\n/kaggle/input/playground-series-s5e7/train.csv\n/kaggle/input/playground-series-s5e7/test.csv\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nwarnings.simplefilter(\"ignore\", UserWarning)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:18.240458Z","iopub.execute_input":"2025-07-31T18:18:18.241441Z","iopub.status.idle":"2025-07-31T18:18:18.245757Z","shell.execute_reply.started":"2025-07-31T18:18:18.241408Z","shell.execute_reply":"2025-07-31T18:18:18.244889Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"import xgboost as xgbclassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import accuracy_score\nfrom scipy.stats import mode\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import accuracy_score, classification_report\nimport optuna\nfrom sklearn.model_selection import cross_val_score\nfrom zlib import crc32\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:23.883772Z","iopub.execute_input":"2025-07-31T18:18:23.884038Z","iopub.status.idle":"2025-07-31T18:18:26.280625Z","shell.execute_reply.started":"2025-07-31T18:18:23.884017Z","shell.execute_reply":"2025-07-31T18:18:26.279631Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"### Reading the Datasets","metadata":{}},{"cell_type":"code","source":"train_dataset = pd. read_csv(\"/kaggle/input/playground-series-s5e7/train.csv\")\ntest_dataset = pd.read_csv(\"/kaggle/input/playground-series-s5e7/test.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:26.912295Z","iopub.execute_input":"2025-07-31T18:18:26.912784Z","iopub.status.idle":"2025-07-31T18:18:26.995766Z","shell.execute_reply.started":"2025-07-31T18:18:26.912756Z","shell.execute_reply":"2025-07-31T18:18:26.994845Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"train_dataset","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:28.455353Z","iopub.execute_input":"2025-07-31T18:18:28.455672Z","iopub.status.idle":"2025-07-31T18:18:28.512619Z","shell.execute_reply.started":"2025-07-31T18:18:28.455647Z","shell.execute_reply":"2025-07-31T18:18:28.511741Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"          id  Time_spent_Alone Stage_fear  Social_event_attendance  \\\n0          0               0.0         No                      6.0   \n1          1               1.0         No                      7.0   \n2          2               6.0        Yes                      1.0   \n3          3               3.0         No                      7.0   \n4          4               1.0         No                      4.0   \n...      ...               ...        ...                      ...   \n18519  18519               3.0         No                      7.0   \n18520  18520               1.0        NaN                      6.0   \n18521  18521               7.0        Yes                      1.0   \n18522  18522               NaN        Yes                      1.0   \n18523  18523               1.0         No                      8.0   \n\n       Going_outside Drained_after_socializing  Friends_circle_size  \\\n0                4.0                        No                 15.0   \n1                3.0                        No                 10.0   \n2                0.0                       NaN                  3.0   \n3                3.0                        No                 11.0   \n4                4.0                        No                 13.0   \n...              ...                       ...                  ...   \n18519            3.0                        No                  9.0   \n18520            7.0                        No                  6.0   \n18521            1.0                       Yes                  1.0   \n18522            0.0                       Yes                  5.0   \n18523            6.0                        No                  4.0   \n\n       Post_frequency Personality  \n0                 5.0   Extrovert  \n1                 8.0   Extrovert  \n2                 0.0   Introvert  \n3                 5.0   Extrovert  \n4                 NaN   Extrovert  \n...               ...         ...  \n18519             7.0   Extrovert  \n18520             5.0   Extrovert  \n18521             NaN   Introvert  \n18522             2.0   Introvert  \n18523             7.0   Extrovert  \n\n[18524 rows x 9 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Time_spent_Alone</th>\n      <th>Stage_fear</th>\n      <th>Social_event_attendance</th>\n      <th>Going_outside</th>\n      <th>Drained_after_socializing</th>\n      <th>Friends_circle_size</th>\n      <th>Post_frequency</th>\n      <th>Personality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0.0</td>\n      <td>No</td>\n      <td>6.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>15.0</td>\n      <td>5.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1.0</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>10.0</td>\n      <td>8.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>6.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>Introvert</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>11.0</td>\n      <td>5.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>1.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>13.0</td>\n      <td>NaN</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>18519</th>\n      <td>18519</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>9.0</td>\n      <td>7.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>18520</th>\n      <td>18520</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>6.0</td>\n      <td>7.0</td>\n      <td>No</td>\n      <td>6.0</td>\n      <td>5.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>18521</th>\n      <td>18521</td>\n      <td>7.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>Introvert</td>\n    </tr>\n    <tr>\n      <th>18522</th>\n      <td>18522</td>\n      <td>NaN</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>Yes</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>Introvert</td>\n    </tr>\n    <tr>\n      <th>18523</th>\n      <td>18523</td>\n      <td>1.0</td>\n      <td>No</td>\n      <td>8.0</td>\n      <td>6.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>7.0</td>\n      <td>Extrovert</td>\n    </tr>\n  </tbody>\n</table>\n<p>18524 rows × 9 columns</p>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"test_dataset","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:31.462346Z","iopub.execute_input":"2025-07-31T18:18:31.462699Z","iopub.status.idle":"2025-07-31T18:18:31.479889Z","shell.execute_reply.started":"2025-07-31T18:18:31.462664Z","shell.execute_reply":"2025-07-31T18:18:31.478939Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"         id  Time_spent_Alone Stage_fear  Social_event_attendance  \\\n0     18524               3.0         No                      7.0   \n1     18525               NaN        Yes                      0.0   \n2     18526               3.0         No                      5.0   \n3     18527               3.0         No                      4.0   \n4     18528               9.0        Yes                      1.0   \n...     ...               ...        ...                      ...   \n6170  24694               3.0         No                      5.0   \n6171  24695               8.0        Yes                      2.0   \n6172  24696               2.0         No                      4.0   \n6173  24697               3.0         No                      4.0   \n6174  24698               NaN        Yes                      1.0   \n\n      Going_outside Drained_after_socializing  Friends_circle_size  \\\n0               4.0                        No                  6.0   \n1               0.0                       Yes                  5.0   \n2               6.0                        No                 15.0   \n3               4.0                        No                  5.0   \n4               2.0                       Yes                  1.0   \n...             ...                       ...                  ...   \n6170            5.0                        No                  9.0   \n6171            1.0                       Yes                  0.0   \n6172            3.0                        No                  9.0   \n6173            4.0                        No                 11.0   \n6174            1.0                       Yes                  1.0   \n\n      Post_frequency  \n0                NaN  \n1                1.0  \n2                9.0  \n3                6.0  \n4                1.0  \n...              ...  \n6170             6.0  \n6171             0.0  \n6172             7.0  \n6173             9.0  \n6174             0.0  \n\n[6175 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Time_spent_Alone</th>\n      <th>Stage_fear</th>\n      <th>Social_event_attendance</th>\n      <th>Going_outside</th>\n      <th>Drained_after_socializing</th>\n      <th>Friends_circle_size</th>\n      <th>Post_frequency</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>18524</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>6.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>18525</td>\n      <td>NaN</td>\n      <td>Yes</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Yes</td>\n      <td>5.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>18526</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>5.0</td>\n      <td>6.0</td>\n      <td>No</td>\n      <td>15.0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>18527</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>5.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>18528</td>\n      <td>9.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>6170</th>\n      <td>24694</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>No</td>\n      <td>9.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>6171</th>\n      <td>24695</td>\n      <td>8.0</td>\n      <td>Yes</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>Yes</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>6172</th>\n      <td>24696</td>\n      <td>2.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>9.0</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>6173</th>\n      <td>24697</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>11.0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>6174</th>\n      <td>24698</td>\n      <td>NaN</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>6175 rows × 8 columns</p>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"train_dataset.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:34.348550Z","iopub.execute_input":"2025-07-31T18:18:34.348846Z","iopub.status.idle":"2025-07-31T18:18:34.390314Z","shell.execute_reply.started":"2025-07-31T18:18:34.348823Z","shell.execute_reply":"2025-07-31T18:18:34.389302Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 18524 entries, 0 to 18523\nData columns (total 9 columns):\n #   Column                     Non-Null Count  Dtype  \n---  ------                     --------------  -----  \n 0   id                         18524 non-null  int64  \n 1   Time_spent_Alone           17334 non-null  float64\n 2   Stage_fear                 16631 non-null  object \n 3   Social_event_attendance    17344 non-null  float64\n 4   Going_outside              17058 non-null  float64\n 5   Drained_after_socializing  17375 non-null  object \n 6   Friends_circle_size        17470 non-null  float64\n 7   Post_frequency             17260 non-null  float64\n 8   Personality                18524 non-null  object \ndtypes: float64(5), int64(1), object(3)\nmemory usage: 1.3+ MB\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"test_dataset.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:37.427234Z","iopub.execute_input":"2025-07-31T18:18:37.427547Z","iopub.status.idle":"2025-07-31T18:18:37.439112Z","shell.execute_reply.started":"2025-07-31T18:18:37.427524Z","shell.execute_reply":"2025-07-31T18:18:37.438300Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 6175 entries, 0 to 6174\nData columns (total 8 columns):\n #   Column                     Non-Null Count  Dtype  \n---  ------                     --------------  -----  \n 0   id                         6175 non-null   int64  \n 1   Time_spent_Alone           5750 non-null   float64\n 2   Stage_fear                 5577 non-null   object \n 3   Social_event_attendance    5778 non-null   float64\n 4   Going_outside              5709 non-null   float64\n 5   Drained_after_socializing  5743 non-null   object \n 6   Friends_circle_size        5825 non-null   float64\n 7   Post_frequency             5767 non-null   float64\ndtypes: float64(5), int64(1), object(2)\nmemory usage: 386.1+ KB\n","output_type":"stream"}],"execution_count":9},{"cell_type":"markdown","source":"### Exploratory Data Analysis","metadata":{}},{"cell_type":"code","source":"train_dataset.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:40.956714Z","iopub.execute_input":"2025-07-31T18:18:40.957028Z","iopub.status.idle":"2025-07-31T18:18:40.968264Z","shell.execute_reply.started":"2025-07-31T18:18:40.957001Z","shell.execute_reply":"2025-07-31T18:18:40.967549Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"id                              0\nTime_spent_Alone             1190\nStage_fear                   1893\nSocial_event_attendance      1180\nGoing_outside                1466\nDrained_after_socializing    1149\nFriends_circle_size          1054\nPost_frequency               1264\nPersonality                     0\ndtype: int64"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"train_dataset.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:43.427379Z","iopub.execute_input":"2025-07-31T18:18:43.427707Z","iopub.status.idle":"2025-07-31T18:18:43.433824Z","shell.execute_reply.started":"2025-07-31T18:18:43.427683Z","shell.execute_reply":"2025-07-31T18:18:43.432866Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"(18524, 9)"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"train_dataset.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:45.268502Z","iopub.execute_input":"2025-07-31T18:18:45.268845Z","iopub.status.idle":"2025-07-31T18:18:45.313665Z","shell.execute_reply.started":"2025-07-31T18:18:45.268812Z","shell.execute_reply":"2025-07-31T18:18:45.312814Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"                 id  Time_spent_Alone  Social_event_attendance  Going_outside  \\\ncount  18524.000000      17334.000000             17344.000000   17058.000000   \nmean    9261.500000          3.137764                 5.265106       4.044319   \nstd     5347.562529          3.003786                 2.753359       2.062580   \nmin        0.000000          0.000000                 0.000000       0.000000   \n25%     4630.750000          1.000000                 3.000000       3.000000   \n50%     9261.500000          2.000000                 5.000000       4.000000   \n75%    13892.250000          4.000000                 8.000000       6.000000   \nmax    18523.000000         11.000000                10.000000       7.000000   \n\n       Friends_circle_size  Post_frequency  \ncount         17470.000000    17260.000000  \nmean              7.996737        4.982097  \nstd               4.223484        2.879139  \nmin               0.000000        0.000000  \n25%               5.000000        3.000000  \n50%               8.000000        5.000000  \n75%              12.000000        7.000000  \nmax              15.000000       10.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Time_spent_Alone</th>\n      <th>Social_event_attendance</th>\n      <th>Going_outside</th>\n      <th>Friends_circle_size</th>\n      <th>Post_frequency</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>18524.000000</td>\n      <td>17334.000000</td>\n      <td>17344.000000</td>\n      <td>17058.000000</td>\n      <td>17470.000000</td>\n      <td>17260.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>9261.500000</td>\n      <td>3.137764</td>\n      <td>5.265106</td>\n      <td>4.044319</td>\n      <td>7.996737</td>\n      <td>4.982097</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5347.562529</td>\n      <td>3.003786</td>\n      <td>2.753359</td>\n      <td>2.062580</td>\n      <td>4.223484</td>\n      <td>2.879139</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>4630.750000</td>\n      <td>1.000000</td>\n      <td>3.000000</td>\n      <td>3.000000</td>\n      <td>5.000000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>9261.500000</td>\n      <td>2.000000</td>\n      <td>5.000000</td>\n      <td>4.000000</td>\n      <td>8.000000</td>\n      <td>5.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>13892.250000</td>\n      <td>4.000000</td>\n      <td>8.000000</td>\n      <td>6.000000</td>\n      <td>12.000000</td>\n      <td>7.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>18523.000000</td>\n      <td>11.000000</td>\n      <td>10.000000</td>\n      <td>7.000000</td>\n      <td>15.000000</td>\n      <td>10.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"ax = sns.countplot(x='Personality', data=train_dataset, palette='Set3')\nfor label in ax.containers:\n  ax.bar_label(label)\nax.set_ylabel('Count')\nax.set_xlabel('Personality')\nax.set_title('Personality Distribution')\nax.set_ylim(0, 15000)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:47.724311Z","iopub.execute_input":"2025-07-31T18:18:47.724622Z","iopub.status.idle":"2025-07-31T18:18:48.048582Z","shell.execute_reply.started":"2025-07-31T18:18:47.724600Z","shell.execute_reply":"2025-07-31T18:18:48.047745Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"1. There are 2 Categorical variables\n2. Time_spent_alone seems to be skewed\n3. The target variable seems to be not balanced","metadata":{}},{"cell_type":"code","source":"ax = sns.countplot(x='Stage_fear', data=train_dataset, palette='Set3')\nfor label in ax.containers:\n  ax.bar_label(label)\nax.set_ylabel('Count')\nax.set_xlabel('Stage Fear')\nax.set_title('Stage Fear Distribution')\nax.set_ylim(0, 15000)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:50.826245Z","iopub.execute_input":"2025-07-31T18:18:50.826637Z","iopub.status.idle":"2025-07-31T18:18:50.994121Z","shell.execute_reply.started":"2025-07-31T18:18:50.826612Z","shell.execute_reply":"2025-07-31T18:18:50.992867Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"ax = sns.countplot(x='Drained_after_socializing', data=train_dataset, palette='Set3')\nfor label in ax.containers:\n  ax.bar_label(label)\nax.set_ylabel('Count')\nax.set_xlabel('Drained After Socializing')\nax.set_title('Drained After Socializing Distribution')\nax.set_ylim(0, 15000)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:53.611748Z","iopub.execute_input":"2025-07-31T18:18:53.612070Z","iopub.status.idle":"2025-07-31T18:18:53.777610Z","shell.execute_reply.started":"2025-07-31T18:18:53.612048Z","shell.execute_reply":"2025-07-31T18:18:53.776847Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":15},{"cell_type":"markdown","source":"Categorical variable distribution is inline with the target variable distribution","metadata":{}},{"cell_type":"code","source":"## Checking for Skewness\ntrain_dataset.skew(numeric_only=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:56.813676Z","iopub.execute_input":"2025-07-31T18:18:56.814008Z","iopub.status.idle":"2025-07-31T18:18:56.846067Z","shell.execute_reply.started":"2025-07-31T18:18:56.813981Z","shell.execute_reply":"2025-07-31T18:18:56.845042Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"id                         0.000000\nTime_spent_Alone           1.133777\nSocial_event_attendance   -0.229238\nGoing_outside             -0.367221\nFriends_circle_size       -0.051806\nPost_frequency            -0.058706\ndtype: float64"},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"test_dataset.skew(numeric_only=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:18:58.544406Z","iopub.execute_input":"2025-07-31T18:18:58.544729Z","iopub.status.idle":"2025-07-31T18:18:58.554789Z","shell.execute_reply.started":"2025-07-31T18:18:58.544704Z","shell.execute_reply":"2025-07-31T18:18:58.553987Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"id                         0.000000\nTime_spent_Alone           1.153476\nSocial_event_attendance   -0.244361\nGoing_outside             -0.345359\nFriends_circle_size       -0.064985\nPost_frequency            -0.074961\ndtype: float64"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"features =  train_dataset.columns\ncat_features = train_dataset.select_dtypes(include=\"object\").columns\nnum_features = train_dataset.select_dtypes(include=\"number\").columns\ntarget = train_dataset[\"Personality\"]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:02.001427Z","iopub.execute_input":"2025-07-31T18:19:02.001736Z","iopub.status.idle":"2025-07-31T18:19:02.008972Z","shell.execute_reply.started":"2025-07-31T18:19:02.001716Z","shell.execute_reply":"2025-07-31T18:19:02.007979Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"plt.figure(figsize=(18, 8))\nfor i, col in enumerate(num_features, 1):\n    plt.subplot(2, 3, i)\n    sns.boxplot(x=target, y=col, data=train_dataset)\n    plt.title(f'{col} by Personality', pad=10, weight='bold')\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:03.922165Z","iopub.execute_input":"2025-07-31T18:19:03.922448Z","iopub.status.idle":"2025-07-31T18:19:04.950587Z","shell.execute_reply.started":"2025-07-31T18:19:03.922428Z","shell.execute_reply":"2025-07-31T18:19:04.949465Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1800x800 with 6 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"## For imputing numerical values\nfrom sklearn.impute import SimpleImputer","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:13.766595Z","iopub.execute_input":"2025-07-31T18:19:13.766883Z","iopub.status.idle":"2025-07-31T18:19:14.099462Z","shell.execute_reply.started":"2025-07-31T18:19:13.766863Z","shell.execute_reply":"2025-07-31T18:19:14.098449Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"\nimputer = SimpleImputer(strategy=\"median\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:16.248719Z","iopub.execute_input":"2025-07-31T18:19:16.249034Z","iopub.status.idle":"2025-07-31T18:19:16.253574Z","shell.execute_reply.started":"2025-07-31T18:19:16.249012Z","shell.execute_reply":"2025-07-31T18:19:16.252782Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"train_dataset_num = train_dataset.select_dtypes(include=[np.number]).columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:19.118539Z","iopub.execute_input":"2025-07-31T18:19:19.118857Z","iopub.status.idle":"2025-07-31T18:19:19.124617Z","shell.execute_reply.started":"2025-07-31T18:19:19.118834Z","shell.execute_reply":"2025-07-31T18:19:19.123511Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"train_dataset_num","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:22.501235Z","iopub.execute_input":"2025-07-31T18:19:22.501563Z","iopub.status.idle":"2025-07-31T18:19:22.507967Z","shell.execute_reply.started":"2025-07-31T18:19:22.501533Z","shell.execute_reply":"2025-07-31T18:19:22.507049Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"Index(['id', 'Time_spent_Alone', 'Social_event_attendance', 'Going_outside',\n       'Friends_circle_size', 'Post_frequency'],\n      dtype='object')"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"imputer.fit(train_dataset[train_dataset_num])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:25.148707Z","iopub.execute_input":"2025-07-31T18:19:25.149020Z","iopub.status.idle":"2025-07-31T18:19:25.177773Z","shell.execute_reply.started":"2025-07-31T18:19:25.148991Z","shell.execute_reply":"2025-07-31T18:19:25.176967Z"}},"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"SimpleImputer(strategy='median')","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SimpleImputer(strategy=&#x27;median&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer(strategy=&#x27;median&#x27;)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":24},{"cell_type":"code","source":"imputer.statistics_","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T04:24:47.934400Z","iopub.execute_input":"2025-07-31T04:24:47.935401Z","iopub.status.idle":"2025-07-31T04:24:47.942392Z","shell.execute_reply.started":"2025-07-31T04:24:47.935371Z","shell.execute_reply":"2025-07-31T04:24:47.941457Z"}},"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"array([9.2615e+03, 2.0000e+00, 0.0000e+00, 5.0000e+00, 4.0000e+00,\n       0.0000e+00, 8.0000e+00, 5.0000e+00, 0.0000e+00])"},"metadata":{}}],"execution_count":36},{"cell_type":"code","source":"train_dataset[train_dataset_num] = imputer.transform(train_dataset[train_dataset_num])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:31.301679Z","iopub.execute_input":"2025-07-31T18:19:31.301987Z","iopub.status.idle":"2025-07-31T18:19:31.313177Z","shell.execute_reply.started":"2025-07-31T18:19:31.301963Z","shell.execute_reply":"2025-07-31T18:19:31.312409Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"train_dataset","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:35.039344Z","iopub.execute_input":"2025-07-31T18:19:35.039673Z","iopub.status.idle":"2025-07-31T18:19:35.058172Z","shell.execute_reply.started":"2025-07-31T18:19:35.039650Z","shell.execute_reply":"2025-07-31T18:19:35.057172Z"}},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"            id  Time_spent_Alone Stage_fear  Social_event_attendance  \\\n0          0.0               0.0         No                      6.0   \n1          1.0               1.0         No                      7.0   \n2          2.0               6.0        Yes                      1.0   \n3          3.0               3.0         No                      7.0   \n4          4.0               1.0         No                      4.0   \n...        ...               ...        ...                      ...   \n18519  18519.0               3.0         No                      7.0   \n18520  18520.0               1.0        NaN                      6.0   \n18521  18521.0               7.0        Yes                      1.0   \n18522  18522.0               2.0        Yes                      1.0   \n18523  18523.0               1.0         No                      8.0   \n\n       Going_outside Drained_after_socializing  Friends_circle_size  \\\n0                4.0                        No                 15.0   \n1                3.0                        No                 10.0   \n2                0.0                       NaN                  3.0   \n3                3.0                        No                 11.0   \n4                4.0                        No                 13.0   \n...              ...                       ...                  ...   \n18519            3.0                        No                  9.0   \n18520            7.0                        No                  6.0   \n18521            1.0                       Yes                  1.0   \n18522            0.0                       Yes                  5.0   \n18523            6.0                        No                  4.0   \n\n       Post_frequency Personality  \n0                 5.0   Extrovert  \n1                 8.0   Extrovert  \n2                 0.0   Introvert  \n3                 5.0   Extrovert  \n4                 5.0   Extrovert  \n...               ...         ...  \n18519             7.0   Extrovert  \n18520             5.0   Extrovert  \n18521             5.0   Introvert  \n18522             2.0   Introvert  \n18523             7.0   Extrovert  \n\n[18524 rows x 9 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Time_spent_Alone</th>\n      <th>Stage_fear</th>\n      <th>Social_event_attendance</th>\n      <th>Going_outside</th>\n      <th>Drained_after_socializing</th>\n      <th>Friends_circle_size</th>\n      <th>Post_frequency</th>\n      <th>Personality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>No</td>\n      <td>6.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>15.0</td>\n      <td>5.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>10.0</td>\n      <td>8.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2.0</td>\n      <td>6.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>Introvert</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>11.0</td>\n      <td>5.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4.0</td>\n      <td>1.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>13.0</td>\n      <td>5.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>18519</th>\n      <td>18519.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>9.0</td>\n      <td>7.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>18520</th>\n      <td>18520.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>6.0</td>\n      <td>7.0</td>\n      <td>No</td>\n      <td>6.0</td>\n      <td>5.0</td>\n      <td>Extrovert</td>\n    </tr>\n    <tr>\n      <th>18521</th>\n      <td>18521.0</td>\n      <td>7.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>Introvert</td>\n    </tr>\n    <tr>\n      <th>18522</th>\n      <td>18522.0</td>\n      <td>2.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>Yes</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>Introvert</td>\n    </tr>\n    <tr>\n      <th>18523</th>\n      <td>18523.0</td>\n      <td>1.0</td>\n      <td>No</td>\n      <td>8.0</td>\n      <td>6.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>7.0</td>\n      <td>Extrovert</td>\n    </tr>\n  </tbody>\n</table>\n<p>18524 rows × 9 columns</p>\n</div>"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"## Imputing test dataset\ntest_dataset[train_dataset_num] = imputer.transform(test_dataset[train_dataset_num])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:39.642428Z","iopub.execute_input":"2025-07-31T18:19:39.642730Z","iopub.status.idle":"2025-07-31T18:19:39.651710Z","shell.execute_reply.started":"2025-07-31T18:19:39.642710Z","shell.execute_reply":"2025-07-31T18:19:39.650668Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"test_dataset","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:46.859749Z","iopub.execute_input":"2025-07-31T18:19:46.860037Z","iopub.status.idle":"2025-07-31T18:19:46.879169Z","shell.execute_reply.started":"2025-07-31T18:19:46.860016Z","shell.execute_reply":"2025-07-31T18:19:46.878416Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"           id  Time_spent_Alone Stage_fear  Social_event_attendance  \\\n0     18524.0               3.0         No                      7.0   \n1     18525.0               2.0        Yes                      0.0   \n2     18526.0               3.0         No                      5.0   \n3     18527.0               3.0         No                      4.0   \n4     18528.0               9.0        Yes                      1.0   \n...       ...               ...        ...                      ...   \n6170  24694.0               3.0         No                      5.0   \n6171  24695.0               8.0        Yes                      2.0   \n6172  24696.0               2.0         No                      4.0   \n6173  24697.0               3.0         No                      4.0   \n6174  24698.0               2.0        Yes                      1.0   \n\n      Going_outside Drained_after_socializing  Friends_circle_size  \\\n0               4.0                        No                  6.0   \n1               0.0                       Yes                  5.0   \n2               6.0                        No                 15.0   \n3               4.0                        No                  5.0   \n4               2.0                       Yes                  1.0   \n...             ...                       ...                  ...   \n6170            5.0                        No                  9.0   \n6171            1.0                       Yes                  0.0   \n6172            3.0                        No                  9.0   \n6173            4.0                        No                 11.0   \n6174            1.0                       Yes                  1.0   \n\n      Post_frequency  \n0                5.0  \n1                1.0  \n2                9.0  \n3                6.0  \n4                1.0  \n...              ...  \n6170             6.0  \n6171             0.0  \n6172             7.0  \n6173             9.0  \n6174             0.0  \n\n[6175 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Time_spent_Alone</th>\n      <th>Stage_fear</th>\n      <th>Social_event_attendance</th>\n      <th>Going_outside</th>\n      <th>Drained_after_socializing</th>\n      <th>Friends_circle_size</th>\n      <th>Post_frequency</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>18524.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>6.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>18525.0</td>\n      <td>2.0</td>\n      <td>Yes</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Yes</td>\n      <td>5.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>18526.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>5.0</td>\n      <td>6.0</td>\n      <td>No</td>\n      <td>15.0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>18527.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>5.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>18528.0</td>\n      <td>9.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>6170</th>\n      <td>24694.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>No</td>\n      <td>9.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>6171</th>\n      <td>24695.0</td>\n      <td>8.0</td>\n      <td>Yes</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>Yes</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>6172</th>\n      <td>24696.0</td>\n      <td>2.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>9.0</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>6173</th>\n      <td>24697.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>No</td>\n      <td>11.0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>6174</th>\n      <td>24698.0</td>\n      <td>2.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>Yes</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>6175 rows × 8 columns</p>\n</div>"},"metadata":{}}],"execution_count":28},{"cell_type":"code","source":"## imputing categorical values\ntrain_cat=train_dataset.select_dtypes(include=\"object\").columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:56.112263Z","iopub.execute_input":"2025-07-31T18:19:56.112571Z","iopub.status.idle":"2025-07-31T18:19:56.118348Z","shell.execute_reply.started":"2025-07-31T18:19:56.112548Z","shell.execute_reply":"2025-07-31T18:19:56.117359Z"}},"outputs":[],"execution_count":29},{"cell_type":"code","source":"train_cat","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:19:57.744457Z","iopub.execute_input":"2025-07-31T18:19:57.744742Z","iopub.status.idle":"2025-07-31T18:19:57.751349Z","shell.execute_reply.started":"2025-07-31T18:19:57.744722Z","shell.execute_reply":"2025-07-31T18:19:57.750534Z"}},"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"Index(['Stage_fear', 'Drained_after_socializing', 'Personality'], dtype='object')"},"metadata":{}}],"execution_count":30},{"cell_type":"code","source":"from sklearn.preprocessing import OrdinalEncoder\n\nordinal_encoder = OrdinalEncoder()\ntrain_dataset[train_cat]= ordinal_encoder.fit_transform(train_dataset[train_cat])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:13.363923Z","iopub.execute_input":"2025-07-31T18:20:13.364240Z","iopub.status.idle":"2025-07-31T18:20:13.384731Z","shell.execute_reply.started":"2025-07-31T18:20:13.364216Z","shell.execute_reply":"2025-07-31T18:20:13.383977Z"}},"outputs":[],"execution_count":31},{"cell_type":"code","source":"train_dataset= train_dataset.drop('id',axis=1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T17:37:04.265157Z","iopub.execute_input":"2025-07-31T17:37:04.265573Z","iopub.status.idle":"2025-07-31T17:37:04.272241Z","shell.execute_reply.started":"2025-07-31T17:37:04.265550Z","shell.execute_reply":"2025-07-31T17:37:04.271291Z"}},"outputs":[],"execution_count":40},{"cell_type":"code","source":"train_dataset","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:16.001478Z","iopub.execute_input":"2025-07-31T18:20:16.002495Z","iopub.status.idle":"2025-07-31T18:20:16.023591Z","shell.execute_reply.started":"2025-07-31T18:20:16.002460Z","shell.execute_reply":"2025-07-31T18:20:16.022802Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"            id  Time_spent_Alone  Stage_fear  Social_event_attendance  \\\n0          0.0               0.0         0.0                      6.0   \n1          1.0               1.0         0.0                      7.0   \n2          2.0               6.0         1.0                      1.0   \n3          3.0               3.0         0.0                      7.0   \n4          4.0               1.0         0.0                      4.0   \n...        ...               ...         ...                      ...   \n18519  18519.0               3.0         0.0                      7.0   \n18520  18520.0               1.0         NaN                      6.0   \n18521  18521.0               7.0         1.0                      1.0   \n18522  18522.0               2.0         1.0                      1.0   \n18523  18523.0               1.0         0.0                      8.0   \n\n       Going_outside  Drained_after_socializing  Friends_circle_size  \\\n0                4.0                        0.0                 15.0   \n1                3.0                        0.0                 10.0   \n2                0.0                        NaN                  3.0   \n3                3.0                        0.0                 11.0   \n4                4.0                        0.0                 13.0   \n...              ...                        ...                  ...   \n18519            3.0                        0.0                  9.0   \n18520            7.0                        0.0                  6.0   \n18521            1.0                        1.0                  1.0   \n18522            0.0                        1.0                  5.0   \n18523            6.0                        0.0                  4.0   \n\n       Post_frequency  Personality  \n0                 5.0          0.0  \n1                 8.0          0.0  \n2                 0.0          1.0  \n3                 5.0          0.0  \n4                 5.0          0.0  \n...               ...          ...  \n18519             7.0          0.0  \n18520             5.0          0.0  \n18521             5.0          1.0  \n18522             2.0          1.0  \n18523             7.0          0.0  \n\n[18524 rows x 9 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Time_spent_Alone</th>\n      <th>Stage_fear</th>\n      <th>Social_event_attendance</th>\n      <th>Going_outside</th>\n      <th>Drained_after_socializing</th>\n      <th>Friends_circle_size</th>\n      <th>Post_frequency</th>\n      <th>Personality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>15.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>10.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2.0</td>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>11.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>13.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>18519</th>\n      <td>18519.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>7.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>18520</th>\n      <td>18520.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>6.0</td>\n      <td>7.0</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>18521</th>\n      <td>18521.0</td>\n      <td>7.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>18522</th>\n      <td>18522.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>18523</th>\n      <td>18523.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>6.0</td>\n      <td>0.0</td>\n      <td>4.0</td>\n      <td>7.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>18524 rows × 9 columns</p>\n</div>"},"metadata":{}}],"execution_count":32},{"cell_type":"code","source":"test_cat=test_dataset.select_dtypes(include=\"object\").columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:24.713574Z","iopub.execute_input":"2025-07-31T18:20:24.713895Z","iopub.status.idle":"2025-07-31T18:20:24.719444Z","shell.execute_reply.started":"2025-07-31T18:20:24.713870Z","shell.execute_reply":"2025-07-31T18:20:24.718125Z"}},"outputs":[],"execution_count":33},{"cell_type":"code","source":"test_dataset[test_cat]= ordinal_encoder.fit_transform(test_dataset[test_cat])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:26.834532Z","iopub.execute_input":"2025-07-31T18:20:26.834841Z","iopub.status.idle":"2025-07-31T18:20:26.845307Z","shell.execute_reply.started":"2025-07-31T18:20:26.834819Z","shell.execute_reply":"2025-07-31T18:20:26.844511Z"}},"outputs":[],"execution_count":34},{"cell_type":"code","source":"ordinal_encoder.categories_","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T03:37:45.498204Z","iopub.execute_input":"2025-07-31T03:37:45.499474Z","iopub.status.idle":"2025-07-31T03:37:45.506232Z","shell.execute_reply.started":"2025-07-31T03:37:45.499436Z","shell.execute_reply":"2025-07-31T03:37:45.504958Z"}},"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"[array(['No', 'Yes', nan], dtype=object),\n array(['No', 'Yes', nan], dtype=object),\n array(['Extrovert', 'Introvert'], dtype=object)]"},"metadata":{}}],"execution_count":34},{"cell_type":"code","source":"'''train_dataset['Personality'].replace({'Extrovert': 1, 'Introvert': 0}, inplace=True)\ntrain_dataset['Stage_fear'].replace({'Yes': 1, 'No': 0}, inplace=True)\ntrain_dataset['Drained_after_socializing'].replace({'Yes': 1, 'No': 0}, inplace=True)\n\n# Encoding object type features as 1/0 for testing data\ntest_dataset['Stage_fear'].replace({'Yes': 1, 'No': 0}, inplace=True)\ntest_dataset['Drained_after_socializing'].replace({'Yes': 1, 'No': 0}, inplace=True)''''''","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-25T01:16:54.383198Z","iopub.execute_input":"2025-07-25T01:16:54.383611Z","iopub.status.idle":"2025-07-25T01:16:54.429683Z","shell.execute_reply.started":"2025-07-25T01:16:54.383577Z","shell.execute_reply":"2025-07-25T01:16:54.428571Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"from sklearn.model_selection import StratifiedKFold","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:35.021891Z","iopub.execute_input":"2025-07-31T18:20:35.022631Z","iopub.status.idle":"2025-07-31T18:20:35.026721Z","shell.execute_reply.started":"2025-07-31T18:20:35.022599Z","shell.execute_reply":"2025-07-31T18:20:35.025720Z"}},"outputs":[],"execution_count":35},{"cell_type":"code","source":"splitter = StratifiedKFold(n_splits=10,shuffle=True,random_state=42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:38.321376Z","iopub.execute_input":"2025-07-31T18:20:38.321677Z","iopub.status.idle":"2025-07-31T18:20:38.326041Z","shell.execute_reply.started":"2025-07-31T18:20:38.321655Z","shell.execute_reply":"2025-07-31T18:20:38.325305Z"}},"outputs":[],"execution_count":36},{"cell_type":"code","source":"xgb_params = {\n    'objective': 'binary:logistic',\n    'eval_metric': 'logloss', \n    'tree_method': 'hist',\n    'learning_rate': 0.1,\n    'max_depth': 3,\n    'subsample': 0.9,\n    'colsample_bytree': 0.9,\n    'lambda': 1,\n    'alpha': 0.5,\n    'seed': 42\n}\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:40.702502Z","iopub.execute_input":"2025-07-31T18:20:40.702796Z","iopub.status.idle":"2025-07-31T18:20:40.707760Z","shell.execute_reply.started":"2025-07-31T18:20:40.702774Z","shell.execute_reply":"2025-07-31T18:20:40.706769Z"}},"outputs":[],"execution_count":37},{"cell_type":"code","source":"X = train_dataset.drop(columns=['Personality'])\ny = train_dataset['Personality']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:44.014487Z","iopub.execute_input":"2025-07-31T18:20:44.014782Z","iopub.status.idle":"2025-07-31T18:20:44.021929Z","shell.execute_reply.started":"2025-07-31T18:20:44.014759Z","shell.execute_reply":"2025-07-31T18:20:44.020942Z"}},"outputs":[],"execution_count":38},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\nimport xgboost as xgb\n\nfold_scores_XGB, test_preds_XGB = [], []\n\n# Cross-validation training\nfor fold, (train_idx, valid_idx) in enumerate(splitter.split(X, y), start=1):\n    X_train = X.loc[train_idx].copy().reset_index(drop=True)\n    X_valid = X.loc[valid_idx].copy().reset_index(drop=True)\n\n    y_train = y.loc[train_idx].reset_index(drop=True)\n    y_valid = y.loc[valid_idx].reset_index(drop=True)\n\n    assert X_train.shape[0] == y_train.shape[0]\n    assert X_valid.shape[0] == y_valid.shape[0]\n\n    # No categorical conversion needed\n    # Commenting out this block\n    # for col in cat_c:\n    #     X_train[col] = X_train[col].astype('category')\n    #     X_valid[col] = X_valid[col].astype('category')\n\n    # Convert to DMatrix WITHOUT enable_categorical\n    dtrain = xgb.DMatrix(X_train, label=y_train)\n    dvalid = xgb.DMatrix(X_valid, label=y_valid)\n\n    bst = xgb.train(\n        params=xgb_params,\n        dtrain=dtrain,\n        num_boost_round=5000,\n        evals=[(dtrain, 'train'), (dvalid, 'valid')],\n        early_stopping_rounds=50,\n        verbose_eval=False\n    )\n\n    val_preds = bst.predict(dvalid)\n    val_preds = np.round(val_preds).astype(int)\n    acc = accuracy_score(y_valid, val_preds)\n\n    fold_scores_XGB.append(acc)\n    print(f\"Fold {fold} Accuracy: {acc:.4f}\")\n\n# Final performance\nprint(f\"\\nMean Accuracy: {np.mean(fold_scores_XGB):.4f}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:20:50.686826Z","iopub.execute_input":"2025-07-31T18:20:50.687173Z","iopub.status.idle":"2025-07-31T18:20:53.766413Z","shell.execute_reply.started":"2025-07-31T18:20:50.687147Z","shell.execute_reply":"2025-07-31T18:20:53.765211Z"}},"outputs":[{"name":"stdout","text":"Fold 1 Accuracy: 0.9682\nFold 2 Accuracy: 0.9714\nFold 3 Accuracy: 0.9719\nFold 4 Accuracy: 0.9622\nFold 5 Accuracy: 0.9660\nFold 6 Accuracy: 0.9671\nFold 7 Accuracy: 0.9703\nFold 8 Accuracy: 0.9687\nFold 9 Accuracy: 0.9708\nFold 10 Accuracy: 0.9714\n\nMean Accuracy: 0.9688\n","output_type":"stream"}],"execution_count":39},{"cell_type":"code","source":"\n# Collect predictions from each model\ndtest = xgb.DMatrix(test_dataset, enable_categorical=False)\ntest_preds_proba = bst.predict(dtest) \ntest_preds_proba = np.argmax(test_preds_proba, axis=1) if test_preds_proba.ndim > 1 else np.round(test_preds_proba).astype(int)\n\n# Convert probabilities to binary class (1 = introvert, 0 = extrovert)\nlabel_map = {0: 'Extrovert', 1: 'Introvert'}\ntest_preds = pd.Series(test_preds_proba).map(label_map)\n\nsubmission = pd.DataFrame({\n    \"id\": test_dataset[\"id\"] if \"id\" in test_dataset.columns else range(len(test_dataset)),\n    \"Personality\": test_preds\n})\n\nsubmission.to_csv(\"XGBmodeloutput.csv\", index=False)\nprint(\"✅ Submission file saved'\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-31T18:21:17.149019Z","iopub.execute_input":"2025-07-31T18:21:17.149394Z","iopub.status.idle":"2025-07-31T18:21:17.189183Z","shell.execute_reply.started":"2025-07-31T18:21:17.149371Z","shell.execute_reply":"2025-07-31T18:21:17.188305Z"}},"outputs":[{"name":"stdout","text":"✅ Submission file saved'\n","output_type":"stream"}],"execution_count":40}]}